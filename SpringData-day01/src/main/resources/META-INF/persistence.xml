<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://java.sun.com/xml/ns/persistence" version="2.0">
    <!--
       1. 要配置一个 持久化单元
           1.1 我们的Jpa提供，hibernate
            | - name : 方便后期我们的Jpa找到我们的配置
            |- transaction-type ： 告诉我们持久化单元的事务类型
                 |- 本地事务：RESOURCE_LOCAL
                 |- 分布式事务： JTA
           1.2 连接数据库
           1.3 可选的一些特色的配置
    -->

    <persistence-unit name="myJpa" transaction-type="RESOURCE_LOCAL">

        <!--配置我们的Jpa提供方-->
        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>

        <!--可选配置：配置jpa实现方的配置信息-->
        <properties>
            <!-- 数据库信息
                用户名，javax.persistence.jdbc.user
                密码，  javax.persistence.jdbc.password
                驱动，  javax.persistence.jdbc.driver
                数据库地址   javax.persistence.jdbc.url
        -->
            <property name="javax.persistence.jdbc.driver" value="com.mysql.jdbc.Driver"/>
            <property name="javax.persistence.jdbc.url"
                      value="jdbc:mysql:///spring-data-demo?characterEncoding=utf8"/>
            <property name="javax.persistence.jdbc.user" value="root"/>
            <property name="javax.persistence.jdbc.password" value="root"/>

            <!--可选配置-->
            <!--1. 为了调试方便，我们要把我们的slq打印出来-->
            <property name="hibernate.show_sql" value="true"/>
            <!-- 2.因为我们打印sql，所以我们配置我们的sql要格式化一下-->
            <property name="hibernate.format_sql" value="true"/>
            <!--3. 为了测试，我们加上该属性，但是真正开发中不要去使用
                   create：程序运行的时候，创建表
                   update：程序运行时，创建表，如果存在则不会创建
                   node：不会创建表
            -->
             <property name="hibernate.hbm2ddl.auto" value="update"/>
        </properties>
    </persistence-unit>
</persistence>